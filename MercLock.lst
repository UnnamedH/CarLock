;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 12-Jul-22 02:08:40 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x282D      	GOTO       45
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x0815      	MOVF       ___DoICPAddr+1, 0
0x0005	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0006	0x0814      	MOVF       ___DoICPAddr, 0
0x0007	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0008	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0009	0x2003      	CALL       _____DoICP
0x000A	0x118A      	BCF        PCLATH, 3
0x000B	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x000C	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x000D	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x000E	0x0A94      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x000F	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0010	0x0A95      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0011	0x03C0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0012	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0013	0x2809      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0014	0x0008      	RETURN
; end of ___CC2DW
_unlock:
;MercLock.c,27 :: 		void unlock()
;MercLock.c,29 :: 		x = 0;
0x0015	0x1283      	BCF        STATUS, 5
0x0016	0x018E      	CLRF       MercLock_x
0x0017	0x018F      	CLRF       MercLock_x+1
;MercLock.c,30 :: 		PORTB.B6 = 1;
0x0018	0x1706      	BSF        PORTB, 6
;MercLock.c,31 :: 		unlocked = 1;
0x0019	0x3001      	MOVLW      1
0x001A	0x0092      	MOVWF      MercLock_unlocked
0x001B	0x3000      	MOVLW      0
0x001C	0x0093      	MOVWF      MercLock_unlocked+1
;MercLock.c,33 :: 		PORTB.B5 = 0;
0x001D	0x1286      	BCF        PORTB, 5
;MercLock.c,34 :: 		locked = 0;
0x001E	0x0190      	CLRF       MercLock_locked
0x001F	0x0191      	CLRF       MercLock_locked+1
;MercLock.c,35 :: 		}
L_end_unlock:
0x0020	0x0008      	RETURN
; end of _unlock
_lock:
;MercLock.c,17 :: 		void lock()
;MercLock.c,19 :: 		x = 0;
0x0021	0x1283      	BCF        STATUS, 5
0x0022	0x018E      	CLRF       MercLock_x
0x0023	0x018F      	CLRF       MercLock_x+1
;MercLock.c,20 :: 		PORTB.B5 = 1;
0x0024	0x1686      	BSF        PORTB, 5
;MercLock.c,21 :: 		locked = 1;
0x0025	0x3001      	MOVLW      1
0x0026	0x0090      	MOVWF      MercLock_locked
0x0027	0x3000      	MOVLW      0
0x0028	0x0091      	MOVWF      MercLock_locked+1
;MercLock.c,23 :: 		PORTB.B6 = 0;
0x0029	0x1306      	BCF        PORTB, 6
;MercLock.c,24 :: 		unlocked = 0;
0x002A	0x0192      	CLRF       MercLock_unlocked
0x002B	0x0193      	CLRF       MercLock_unlocked+1
;MercLock.c,25 :: 		}
L_end_lock:
0x002C	0x0008      	RETURN
; end of _lock
_main:
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x018C      	CLRF       MercLock_time
0x002F	0x018D      	CLRF       13
0x0030	0x018E      	CLRF       MercLock_x
0x0031	0x018F      	CLRF       15
0x0032	0x0190      	CLRF       MercLock_locked
0x0033	0x0191      	CLRF       17
0x0034	0x0192      	CLRF       MercLock_unlocked
0x0035	0x0193      	CLRF       19
;MercLock.c,37 :: 		void main()
;MercLock.c,39 :: 		TRISB = 0b00000110;
0x0036	0x3006      	MOVLW      6
0x0037	0x1683      	BSF        STATUS, 5
0x0038	0x0086      	MOVWF      TRISB
;MercLock.c,41 :: 		do
L_main0:
;MercLock.c,43 :: 		if (PORTB.B1 == 1)
0x0039	0x1283      	BCF        STATUS, 5
0x003A	0x1C86      	BTFSS      PORTB, 1
0x003B	0x284F      	GOTO       L_main3
;MercLock.c,45 :: 		time++;
0x003C	0x0A8C      	INCF       MercLock_time, 1
0x003D	0x1903      	BTFSC      STATUS, 2
0x003E	0x0A8D      	INCF       MercLock_time+1, 1
;MercLock.c,47 :: 		if (time >= inTimeCheck)
0x003F	0x3080      	MOVLW      128
0x0040	0x060D      	XORWF      MercLock_time+1, 0
0x0041	0x00C0      	MOVWF      R0
0x0042	0x3080      	MOVLW      128
0x0043	0x3A00      	XORLW      0
0x0044	0x0240      	SUBWF      R0, 0
0x0045	0x1D03      	BTFSS      STATUS, 2
0x0046	0x2849      	GOTO       L__main19
0x0047	0x3020      	MOVLW      32
0x0048	0x020C      	SUBWF      MercLock_time, 0
L__main19:
0x0049	0x1C03      	BTFSS      STATUS, 0
0x004A	0x284E      	GOTO       L_main4
;MercLock.c,49 :: 		time = 0;
0x004B	0x018C      	CLRF       MercLock_time
0x004C	0x018D      	CLRF       MercLock_time+1
;MercLock.c,50 :: 		lock();
0x004D	0x2021      	CALL       _lock
;MercLock.c,51 :: 		}
L_main4:
;MercLock.c,52 :: 		}
0x004E	0x2890      	GOTO       L_main5
L_main3:
0x004F	0x1283      	BCF        STATUS, 5
;MercLock.c,53 :: 		else if (PORTB.B2 == 1)
0x0050	0x1D06      	BTFSS      PORTB, 2
0x0051	0x2865      	GOTO       L_main6
;MercLock.c,55 :: 		time++;
0x0052	0x0A8C      	INCF       MercLock_time, 1
0x0053	0x1903      	BTFSC      STATUS, 2
0x0054	0x0A8D      	INCF       MercLock_time+1, 1
;MercLock.c,57 :: 		if (time >= inTimeCheck)
0x0055	0x3080      	MOVLW      128
0x0056	0x060D      	XORWF      MercLock_time+1, 0
0x0057	0x00C0      	MOVWF      R0
0x0058	0x3080      	MOVLW      128
0x0059	0x3A00      	XORLW      0
0x005A	0x0240      	SUBWF      R0, 0
0x005B	0x1D03      	BTFSS      STATUS, 2
0x005C	0x285F      	GOTO       L__main20
0x005D	0x3020      	MOVLW      32
0x005E	0x020C      	SUBWF      MercLock_time, 0
L__main20:
0x005F	0x1C03      	BTFSS      STATUS, 0
0x0060	0x2864      	GOTO       L_main7
;MercLock.c,59 :: 		time = 0;
0x0061	0x018C      	CLRF       MercLock_time
0x0062	0x018D      	CLRF       MercLock_time+1
;MercLock.c,60 :: 		unlock();
0x0063	0x2015      	CALL       _unlock
;MercLock.c,61 :: 		}
L_main7:
;MercLock.c,62 :: 		}
0x0064	0x2890      	GOTO       L_main8
L_main6:
;MercLock.c,63 :: 		else if (locked == 1 || unlocked == 1)
0x0065	0x3000      	MOVLW      0
0x0066	0x0611      	XORWF      MercLock_locked+1, 0
0x0067	0x1D03      	BTFSS      STATUS, 2
0x0068	0x286B      	GOTO       L__main21
0x0069	0x3001      	MOVLW      1
0x006A	0x0610      	XORWF      MercLock_locked, 0
L__main21:
0x006B	0x1903      	BTFSC      STATUS, 2
0x006C	0x2876      	GOTO       L__main15
0x006D	0x3000      	MOVLW      0
0x006E	0x0613      	XORWF      MercLock_unlocked+1, 0
0x006F	0x1D03      	BTFSS      STATUS, 2
0x0070	0x2873      	GOTO       L__main22
0x0071	0x3001      	MOVLW      1
0x0072	0x0612      	XORWF      MercLock_unlocked, 0
L__main22:
0x0073	0x1903      	BTFSC      STATUS, 2
0x0074	0x2876      	GOTO       L__main15
0x0075	0x288C      	GOTO       L_main11
L__main15:
;MercLock.c,65 :: 		x++;
0x0076	0x0A8E      	INCF       MercLock_x, 1
0x0077	0x1903      	BTFSC      STATUS, 2
0x0078	0x0A8F      	INCF       MercLock_x+1, 1
;MercLock.c,67 :: 		if (x >= onTimeCheck)
0x0079	0x3080      	MOVLW      128
0x007A	0x060F      	XORWF      MercLock_x+1, 0
0x007B	0x00C0      	MOVWF      R0
0x007C	0x3080      	MOVLW      128
0x007D	0x3A00      	XORLW      0
0x007E	0x0240      	SUBWF      R0, 0
0x007F	0x1D03      	BTFSS      STATUS, 2
0x0080	0x2883      	GOTO       L__main23
0x0081	0x30C8      	MOVLW      200
0x0082	0x020E      	SUBWF      MercLock_x, 0
L__main23:
0x0083	0x1C03      	BTFSS      STATUS, 0
0x0084	0x288B      	GOTO       L_main12
;MercLock.c,69 :: 		locked = 0;
0x0085	0x0190      	CLRF       MercLock_locked
0x0086	0x0191      	CLRF       MercLock_locked+1
;MercLock.c,70 :: 		unlocked = 0;
0x0087	0x0192      	CLRF       MercLock_unlocked
0x0088	0x0193      	CLRF       MercLock_unlocked+1
;MercLock.c,71 :: 		x = 0;
0x0089	0x018E      	CLRF       MercLock_x
0x008A	0x018F      	CLRF       MercLock_x+1
;MercLock.c,72 :: 		}
L_main12:
;MercLock.c,73 :: 		}
0x008B	0x2890      	GOTO       L_main13
L_main11:
0x008C	0x1283      	BCF        STATUS, 5
;MercLock.c,76 :: 		PORTB = 0x00;
0x008D	0x0186      	CLRF       PORTB
;MercLock.c,77 :: 		time = 0;
0x008E	0x018C      	CLRF       MercLock_time
0x008F	0x018D      	CLRF       MercLock_time+1
;MercLock.c,78 :: 		}
L_main13:
L_main8:
L_main5:
;MercLock.c,80 :: 		Delay_ms(interval);
0x0090	0x301A      	MOVLW      26
0x0091	0x00CC      	MOVWF      R12
0x0092	0x30F8      	MOVLW      248
0x0093	0x00CD      	MOVWF      R13
L_main14:
0x0094	0x0BCD      	DECFSZ     R13, 1
0x0095	0x2894      	GOTO       L_main14
0x0096	0x0BCC      	DECFSZ     R12, 1
0x0097	0x2894      	GOTO       L_main14
0x0098	0x0000      	NOP
;MercLock.c,81 :: 		} while (1);
0x0099	0x2839      	GOTO       L_main0
;MercLock.c,82 :: 		}
L_end_main:
0x009A	0x289A      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [6]    _____DoICP
0x0009      [12]    ___CC2DW
0x0015      [12]    _unlock
0x0021      [12]    _lock
0x002D     [110]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000C       [2]    MercLock_time
0x000E       [2]    MercLock_x
0x0010       [2]    MercLock_locked
0x0012       [2]    MercLock_unlocked
0x0014       [2]    ___DoICPAddr
0x0040       [1]    R0
0x0041       [1]    R1
0x0042       [1]    R2
0x0043       [1]    R3
0x0044       [1]    R4
0x0045       [1]    R5
0x0046       [1]    R6
0x0047       [1]    R7
0x0048       [1]    R8
0x0049       [1]    R9
0x004A       [1]    R10
0x004B       [1]    R11
0x004C       [1]    R12
0x004D       [1]    R13
0x004E       [1]    R14
0x004F       [1]    R15
0x0086       [1]    TRISB
